<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-cn"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://quaner-dev.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://quaner-dev.github.io/" rel="alternate" type="text/html" hreflang="zh-cn"/><updated>2025-11-01T09:48:20+00:00</updated><id>https://quaner-dev.github.io/feed.xml</id><title type="html">Quaner’s Blog</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">SNAT和DNAT</title><link href="https://quaner-dev.github.io/blog/2025/SNAT%E5%92%8CDNAT/" rel="alternate" type="text/html" title="SNAT和DNAT"/><published>2025-11-01T00:00:00+00:00</published><updated>2025-11-01T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/SNAT%E5%92%8CDNAT</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/SNAT%E5%92%8CDNAT/"><![CDATA[<h2 id="nat介绍">NAT介绍</h2> <p>NAT网络地址转换（Network Address Translation）是一种常见的网络技术，主要用于私有网络和公共网络之间通信。</p> <h2 id="dnat">DNAT</h2> <h3 id="dnat介绍">DNAT介绍</h3> <p>DNAT目标地址转换（Destination Network Address Translation）是NAT的一种形式，主要将外部网络的目标IP地址转换为内部网络中的IP地址</p> <h3 id="dnat示例">DNAT示例</h3> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>iptables <span class="nt">-t</span> nat <span class="nt">-A</span> PREROUTING <span class="nt">-i</span> eth0 <span class="nt">-p</span> tcp <span class="nt">--dport</span> 80 <span class="nt">-j</span> DNAT <span class="nt">--to-destination</span> 192.168.1.100:80
</code></pre></div></div> <h2 id="snat">SNAT</h2> <h3 id="snat介绍">SNAT介绍</h3> <p>SNAT原网络地址转换（Source Network Address Translation）是NAT的一种形式，主要将内部网络的源IP地址转换为外部网络中的IP地址</p> <h3 id="snat示例">SNAT示例</h3> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>iptables <span class="nt">-t</span> nat <span class="nt">-A</span> POSTROUTING <span class="nt">-o</span> eth0 <span class="nt">-s</span> 192.168.1.0/24 <span class="nt">-j</span> SNAT <span class="nt">--to-source</span> 203.0.113.10
</code></pre></div></div> <h2 id="kubernetes网络问题分析">Kubernetes网络问题分析</h2> <h3 id="问题现象">问题现象</h3> <p>Pod访问外部服务时，在宿主机抓包发现同一请求出现两次：</p> <ul> <li>Pod IP (100.64.25.264) → 外部服务</li> <li>节点 IP (xx.xx.22.38) → 外部服务</li> </ul> <p>时间戳显示两次请求间隔32微秒，响应也有对应的两次。</p> <h3 id="排查过程">排查过程</h3> <ol> <li>确认100.64.x.x为Pod IP，非Service IP</li> <li>检查应用层无重复请求逻辑</li> <li>排除负载均衡和Ingress转发问题</li> <li>分析iptables规则发现SNAT配置</li> </ol> <p><img src="/assets/img/post_img/2025-11-01-SNAT和DNAT/1.png" alt="Iptable命令返回结果"/></p> <h3 id="根本原因">根本原因</h3> <p>Kubernetes SNAT机制导致</p> <p>Pod访问外部服务时自动触发源地址转换，原始请求（Pod IP）经SNAT转为节点IP，宿主机抓包能看到NAT前后的两个数据包，32微秒延迟为SNAT处理时间，属正常范围</p> <h3 id="结论">结论</h3> <p>此为Kubernetes网络正常行为，并非故障，SNAT确保外部服务流量能正确返回到集群内部</p>]]></content><author><name></name></author><category term="Network"/><category term="NAT"/><summary type="html"><![CDATA[NAT介绍]]></summary></entry><entry><title type="html">Clickhouse Drop表过大异常</title><link href="https://quaner-dev.github.io/blog/2025/Clickhouse-Drop%E8%A1%A8%E8%BF%87%E5%A4%A7%E5%BC%82%E5%B8%B8/" rel="alternate" type="text/html" title="Clickhouse Drop表过大异常"/><published>2025-10-27T00:00:00+00:00</published><updated>2025-10-27T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Clickhouse%20Drop%E8%A1%A8%E8%BF%87%E5%A4%A7%E5%BC%82%E5%B8%B8</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Clickhouse-Drop%E8%A1%A8%E8%BF%87%E5%A4%A7%E5%BC%82%E5%B8%B8/"><![CDATA[<h2 id="异常情况">异常情况</h2> <p>CK日志显示Drop表失败，数据量超出允许删除大小</p> <pre><code class="language-log">Size (58.45 GB) is greater than max_[table/partition]_size_to_drop (50.00 GB) 2. File '/var/lib/clickhouse/flags/force_drop_table' intended to force DROP doesn't exist How to fix this:

Either increase (or set to zero) max_[table/partition]_size_to_drop in server config
Either pass a bigger (or set to zero) max_[table/partition]_size_to_drop through query settings
Either create forcing file /var/lib/clickhouse/flags/force_drop_table and make sure that ClickHouse has write permission for it. Example: sudo touch '/var/lib/clickhouse/flags/force_drop_table' &amp;&amp; sudo chmod 666 '/var/lib/clickhouse/flags/force_drop_table'.
</code></pre> <h2 id="原因">原因</h2> <p>默认情况下CK的<code class="language-plaintext highlighter-rouge">max_table_size_to_drop</code>为50G，超出50G的表会要求修改配置，或手动创建flag文件用于删除表</p> <h2 id="解决方法">解决方法</h2> <h3 id="方法一">方法一</h3> <p>临时解决方法，增加临时flag文件，用于Drop操作</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo touch</span> <span class="s1">'/var/lib/clickhouse/flags/force drop table &amp;&amp; sudo chmod 666 '</span>/var/lib/clickhouse/flags/foorce_drop_table
</code></pre></div></div> <h3 id="方法二">方法二</h3> <p>长期解决方法。修改配置文件，增大或取消限制</p> <p>由于max_table_size_to_drop是全局配置，因此可以放在所有可以配置全局变量的配置文件中，这里仅仅给出config.xml的配置方法</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /etc/clickhouse-server/config.xml
</code></pre></div></div> <p>在config.xml中增加配置</p> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;max_table_size_to_drop&gt;</span>0<span class="nt">&lt;/max_table_size_to_drop&gt;</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Middleware"/><category term="Clickhouse"/><summary type="html"><![CDATA[异常情况]]></summary></entry><entry><title type="html">Jmeter使用指南</title><link href="https://quaner-dev.github.io/blog/2025/Jmeter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/" rel="alternate" type="text/html" title="Jmeter使用指南"/><published>2025-10-24T00:00:00+00:00</published><updated>2025-10-24T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Jmeter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Jmeter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"><![CDATA[<h2 id="下载jmeter">下载Jmeter</h2> <ol> <li><a href="https://jmeter.apache.org/">Jmeter官网</a></li> <li><a href="https://jmeter.apache.org/download_jmeter.cgi">Download Release</a></li> <li><a href="https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz">Apache JMeter 5.6.3 (Requires Java 8+)</a></li> </ol> <h2 id="win打开jmeter软件">Win打开Jmeter软件</h2> <p>解压下载的安装包后，进入apache-jmeter-5.6.3/bin中，点击jmeter.bat即可打开Jmeter软件。</p> <p><img src="/assets/img/post_img/2025-10-24-Jmeter使用指南/1.png" alt="Jmeter软件首页"/></p> <h2 id="使用方法">使用方法</h2> <h3 id="thread-group">Thread Group</h3> <p><img src="/assets/img/post_img/2025-10-24-Jmeter使用指南/2.png" alt="Thread Group"/></p> <h4 id="增加thread-group">增加Thread Group</h4> <p>在Test Plan选项中右击，依次选择Add - Threads(Users) - Thread Group</p> <h4 id="修改thread-group参数">修改Thread Group参数</h4> <table> <thead> <tr> <th>参数</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>Name</td> <td>名称</td> </tr> <tr> <td>Comments</td> <td>注释</td> </tr> <tr> <td>Number of Theads (users)</td> <td>线程数</td> </tr> <tr> <td>Ramp-up period (seconds)</td> <td>线程启动时间</td> </tr> <tr> <td>Loop Count</td> <td>循环次数，Infinite为无限循环</td> </tr> </tbody> </table> <h3 id="http-request">HTTP Request</h3> <p><img src="/assets/img/post_img/2025-10-24-Jmeter使用指南/3.png" alt="HTTP Request"/></p> <h4 id="增加http-request">增加HTTP Request</h4> <p>在Thread Group选项中右击，依次选择Add - Sampler - HTTP Request</p> <h4 id="修改http-request参数">修改HTTP Request参数</h4> <p>可以根据Postman中对应进行填写</p> <h3 id="http-header-manager">HTTP Header Manager</h3> <h4 id="新增http-header-manager">新增HTTP Header Manager</h4> <p>在Thread Group选项中右击，依次选择Add - Config Element - HTTP Header Manager</p> <h4 id="修改http-header-manager参数">修改HTTP Header Manager参数</h4> <p>可以根据Postman中对应进行填写</p> <h3 id="view-result-tree">View Result Tree</h3> <p><img src="/assets/img/post_img/2025-10-24-Jmeter使用指南/4.png" alt="View Result Tree"/></p> <h3 id="summary-report">Summary Report</h3> <h4 id="参数描述">参数描述</h4> <table> <thead> <tr> <th>参数</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>Label</td> <td>采样器</td> </tr> <tr> <td>Samples</td> <td>完成的请求总数</td> </tr> <tr> <td>Average</td> <td>平均响应时间（毫秒）</td> </tr> <tr> <td>Min</td> <td>最小响应时间（毫秒）</td> </tr> <tr> <td>Max</td> <td>最大响应时间</td> </tr> <tr> <td>Std. Dev.</td> <td>响应时间的标准偏差</td> </tr> <tr> <td>Error %</td> <td>请求的错误率</td> </tr> <tr> <td>Throughput</td> <td>吞吐量</td> </tr> <tr> <td>Received KB/sec</td> <td>接收数据的吞吐量</td> </tr> <tr> <td>Sent KB/sec</td> <td>发送数据的吞吐量</td> </tr> <tr> <td>Avg. Bytes</td> <td>平均响应数据大小</td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="Jmeter"/><category term="Jmeter"/><summary type="html"><![CDATA[下载Jmeter]]></summary></entry><entry><title type="html">Excel导入图片URL并显示图片</title><link href="https://quaner-dev.github.io/blog/2025/Excel%E5%AF%BC%E5%85%A5%E5%9B%BE%E7%89%87URL%E5%B9%B6%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/" rel="alternate" type="text/html" title="Excel导入图片URL并显示图片"/><published>2025-10-21T00:00:00+00:00</published><updated>2025-10-21T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Excel%E5%AF%BC%E5%85%A5%E5%9B%BE%E7%89%87URL%E5%B9%B6%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Excel%E5%AF%BC%E5%85%A5%E5%9B%BE%E7%89%87URL%E5%B9%B6%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/"><![CDATA[<h2 id="整理图片url">整理图片URL</h2> <p>将图片URL整理为如下格式，其中xxx使用真实图片URL替代，图片大小根据excel实际大小手动调整</p> <pre><code class="language-txt">&lt;table&gt;&lt;img src="xxx" height=50 width=50&gt;&lt;/table&gt;
&lt;table&gt;&lt;img src="xxx" height=50 width=50&gt;&lt;/table&gt;
&lt;table&gt;&lt;img src="xxx" height=50 width=50&gt;&lt;/table&gt;
</code></pre> <h2 id="导入excel">导入Excel</h2> <p>将上述整理好的数据直接粘贴到excel中，excel会自动下载并显示图片</p>]]></content><author><name></name></author><category term="Excel"/><category term="Excel"/><summary type="html"><![CDATA[整理图片URL]]></summary></entry><entry><title type="html">Shell命令汇总</title><link href="https://quaner-dev.github.io/blog/2025/Shell%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/" rel="alternate" type="text/html" title="Shell命令汇总"/><published>2025-10-16T00:00:00+00:00</published><updated>2025-10-16T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Shell%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Shell%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"><![CDATA[<h2 id="date">Date</h2> <h3 id="显示时间">显示时间</h3> <p>直接显示当前时间</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">date</span>
</code></pre></div></div> <h3 id="格式化显示时间">格式化显示时间</h3> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">date</span> +<span class="s1">'%Y-%m-%d %H:%M:%S'</span> <span class="c"># 2025-10-16 11:31:33</span>
</code></pre></div></div> <h3 id="设定时间">设定时间</h3> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">date </span>20251016
</code></pre></div></div> <h3 id="显示时间戳">显示时间戳</h3> <h4 id="显示当前时间戳">显示当前时间戳</h4> <p>输出秒级时间戳，如需使用毫秒级，则乘1000</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">date</span> +%s
</code></pre></div></div> <h4 id="转换特定时间时间戳">转换特定时间时间戳</h4> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">date</span> <span class="nt">-d</span> <span class="s2">"2025-10-16 11:31:33"</span> +%s
</code></pre></div></div> <h2 id="find">Find</h2> <h3 id="todo">TODO</h3>]]></content><author><name></name></author><category term="Shell"/><category term="Date"/><summary type="html"><![CDATA[Date]]></summary></entry><entry><title type="html">Minio Client 命令</title><link href="https://quaner-dev.github.io/blog/2025/Minio-Client%E5%91%BD%E4%BB%A4/" rel="alternate" type="text/html" title="Minio Client 命令"/><published>2025-09-15T00:00:00+00:00</published><updated>2025-09-15T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Minio%20Client%E5%91%BD%E4%BB%A4</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Minio-Client%E5%91%BD%E4%BB%A4/"><![CDATA[<h2 id="下载并安装-mc">下载并安装 mc</h2> <p>使用如下命令下载安装包，并安装</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://dl.min.io/client/mc/release/linux-amd64/mc
<span class="nb">chmod</span> +x mc
./mc <span class="nt">--help</span>
</code></pre></div></div> <h2 id="bucket-操作">Bucket 操作</h2> <h3 id="查看-bucket-列表">查看 Bucket 列表</h3> <p><code class="language-plaintext highlighter-rouge">mc ls</code></p> <h3 id="查看-bucket-下文件或文件夹">查看 Bucket 下文件或文件夹</h3> <p><code class="language-plaintext highlighter-rouge">mc ls local/hit</code></p> <h3 id="创建-bucket">创建 Bucket</h3> <p><code class="language-plaintext highlighter-rouge">mc mb local/hit</code></p> <h3 id="删除-bucket">删除 Bucket</h3> <p><code class="language-plaintext highlighter-rouge">mc rm local/hit/hit/2025/01</code></p>]]></content><author><name></name></author><category term="Minio"/><category term="Minio"/><category term="mc"/><summary type="html"><![CDATA[下载并安装 mc]]></summary></entry><entry><title type="html">Foxmail 添加 Gmail</title><link href="https://quaner-dev.github.io/blog/2025/Foxmail%E6%B7%BB%E5%8A%A0Gmail/" rel="alternate" type="text/html" title="Foxmail 添加 Gmail"/><published>2025-08-25T00:00:00+00:00</published><updated>2025-08-25T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Foxmail%E6%B7%BB%E5%8A%A0Gmail</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Foxmail%E6%B7%BB%E5%8A%A0Gmail/"><![CDATA[<h2 id="原因">原因</h2> <p>Google 并不支持使用账号密码直接登录不太安全的第三方软件</p> <h2 id="解决步骤">解决步骤</h2> <ol> <li> <p>开启两步验证 登录 Google 账号后，点击 Google 账号中右上角的<code class="language-plaintext highlighter-rouge">管理您的Google账号</code>，点击左侧安全性，开启两步验证</p> </li> <li> <p>生成专用密码 进入<code class="language-plaintext highlighter-rouge">https://myaccount.google.com/apppasswords</code>中生成专用密码</p> </li> <li> <p>使用专用密码登录 在 Foxmail 中点击其他邮箱，并使用专用密码登录</p> </li> </ol>]]></content><author><name></name></author><category term="Mail"/><category term="Gmail"/><summary type="html"><![CDATA[原因]]></summary></entry><entry><title type="html">Docker Ignore 介绍</title><link href="https://quaner-dev.github.io/blog/2025/Docker-Ignore%E4%BB%8B%E7%BB%8D/" rel="alternate" type="text/html" title="Docker Ignore 介绍"/><published>2025-08-04T00:00:00+00:00</published><updated>2025-08-04T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/Docker%20Ignore%E4%BB%8B%E7%BB%8D</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/Docker-Ignore%E4%BB%8B%E7%BB%8D/"><![CDATA[<h2 id="简介">简介</h2> <p>你可以使用<code class="language-plaintext highlighter-rouge">.dockerignore</code>文件从构建中排除某些文件或文件夹</p> <h2 id="文件名和路径">文件名和路径</h2> <p>当运行<code class="language-plaintext highlighter-rouge">build</code>命令时，构建客户端会在 root 目录中寻找名为<code class="language-plaintext highlighter-rouge">.dockerignore</code>的文件。如果文件存在，被匹配到的文件和文件夹都会被移除在构建上下文中</p> <h2 id="官方文档地址">官方文档地址</h2> <p><code class="language-plaintext highlighter-rouge">https://docs.docker.com/build/concepts/context/#dockerignore-files</code></p>]]></content><author><name></name></author><category term="Docker"/><category term="Dockerignore"/><summary type="html"><![CDATA[简介]]></summary></entry><entry><title type="html">部署 K8S</title><link href="https://quaner-dev.github.io/blog/2025/%E9%83%A8%E7%BD%B2K8S/" rel="alternate" type="text/html" title="部署 K8S"/><published>2025-07-10T00:00:00+00:00</published><updated>2025-07-10T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/%E9%83%A8%E7%BD%B2K8S</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/%E9%83%A8%E7%BD%B2K8S/"><![CDATA[<h2 id="用-curl-在-linux-系统中安装-kubectl">用 curl 在 Linux 系统中安装 kubectl</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-LO</span> <span class="s2">"https://dl.k8s.io/release/</span><span class="si">$(</span>curl <span class="nt">-L</span> <span class="nt">-s</span> https://dl.k8s.io/release/stable.txt<span class="si">)</span><span class="s2">/bin/linux/amd64/kubectl"</span>
</code></pre></div></div> <h3 id="说明">说明</h3> <ol> <li>可以替换 url 中的 amd64 为 arm64，用于下载 arm 版本 kubectl</li> <li>替换<code class="language-plaintext highlighter-rouge">$(curl -L -s https://dl.k8s.io/release/stable.txt)</code>为特定版本后，用于下载特定版本 kubectl</li> </ol> <h2 id="安装-kubectl">安装 kubectl</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo install</span> <span class="nt">-o</span> root <span class="nt">-g</span> root <span class="nt">-m</span> 0755 kubectl /usr/local/bin/kubectl
</code></pre></div></div> <h2 id="确认-kubectl-版本">确认 kubectl 版本</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl version <span class="nt">--client</span>
</code></pre></div></div> <h2 id="部署-helm">部署 helm</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-fsSL</span> <span class="nt">-o</span> get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
<span class="nb">chmod </span>700 get_helm.sh
./get_helm.sh
</code></pre></div></div>]]></content><author><name></name></author><category term="K8S"/><category term="Kubenetes"/><category term="Kubectl"/><summary type="html"><![CDATA[用 curl 在 Linux 系统中安装 kubectl]]></summary></entry><entry><title type="html">优化 SQLite 性能</title><link href="https://quaner-dev.github.io/blog/2025/%E4%BC%98%E5%8C%96SQLite%E6%80%A7%E8%83%BD/" rel="alternate" type="text/html" title="优化 SQLite 性能"/><published>2025-06-15T00:00:00+00:00</published><updated>2025-06-15T00:00:00+00:00</updated><id>https://quaner-dev.github.io/blog/2025/%E4%BC%98%E5%8C%96SQLite%E6%80%A7%E8%83%BD</id><content type="html" xml:base="https://quaner-dev.github.io/blog/2025/%E4%BC%98%E5%8C%96SQLite%E6%80%A7%E8%83%BD/"><![CDATA[<h2 id="日志模式">日志模式</h2> <p>修改后 SQLite 不再直接随机写入到数据库文件中，而是先行顺序写入到预写式日志，并定期提交到数据库文件中。</p> <table> <thead> <tr> <th>Pragma</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>DELETE</td> <td>默认模式。在该模式下，在事务结束时，日志文件将被删除</td> </tr> <tr> <td>TRUNCATE</td> <td>日志文件被截断为零字节长度</td> </tr> <tr> <td>PERSIST</td> <td>日志文件被留在原地，但头部被重写，表明日志不再有效</td> </tr> <tr> <td>MEMORY</td> <td>日志记录保留在内存中，而不是磁盘上</td> </tr> <tr> <td>OFF</td> <td>不保留任何日志记录</td> </tr> </tbody> </table> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PRAGMA <span class="nv">journal_mode</span><span class="o">=</span>WAL<span class="p">;</span>
</code></pre></div></div> <h2 id="磁盘同步模式">磁盘同步模式</h2> <p>设定当前磁盘同步模式，该模式控制 SQLite 如何将数据写入物理磁盘</p> <table> <thead> <tr> <th>Pragma</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>0/OFF</td> <td>不进行同步</td> </tr> <tr> <td>1/NORMAL</td> <td>在关键的磁盘操作的每个序列后同步</td> </tr> <tr> <td>2/FULL</td> <td>在每个关键的磁盘操作后同步</td> </tr> </tbody> </table> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PRAGMA <span class="nv">synchronous</span><span class="o">=</span>NORMAL
</code></pre></div></div>]]></content><author><name></name></author><category term="Database"/><category term="SQLite"/><summary type="html"><![CDATA[日志模式]]></summary></entry></feed>